[build-system]
requires = ["scikit-build-core", "numpy", "charset-normalizer"]
build-backend = "scikit_build_core.build"

[project]
name = "thermal-comfort-omp"
version = "1.1.2"
dependencies = [
    "numpy>=2.0.0"
]
requires-python = ">=3.9"
authors = [
  {name = "Jonas Kittner"}
]
maintainers = [
  {name = "Jonas Kittner", email = 'jonas.kittner@rub.de'}
]
description = "Functions to calculate thermal comfort indices"
readme = "README.md"
license-files = ["LICENSE*"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]

[project.urls]
Repository = "https://github.com/RUBclim/thermal-comfort"
Issues = "https://github.com/RUBclim/thermal-comfort/issues"

[tool.scikit-build]
ninja.version = ">=1.10"
cmake.version = ">=3.17.2"
cmake.args = ["-DUSE_OPENMP=1"]
wheel.packages = ["src/thermal_comfort"]

[tool.coverage.report]
fail_under = 100

[tool.coverage.run]
parallel = true
plugins = ["covdefaults"]
source = ["thermal_comfort", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.autopep8]
max_line_length = 88

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = ["testing.*"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.cibuildwheel]
# test-requires = ["pytest", "pandas"]
# test sources is not released yet
# test-sources = [
#   "tests",
#   "testing"
# ]
# test-command = "pytest {project}/tests"
test-command = "python -c 'import thermal_comfort; thermal_comfort.pet_static(ta=20, rh=50, v=0.15, tmrt=20, p=1013.25)'"
build-frontend = "build[uv]"
build = "cp*"
skip = "cp*-musllinux_aarch64"

[tool.cibuildwheel.linux]
# TODO: There is an error on aarch64: Fatal Error: Cannot find an intrinsic module named 'ieee_arithmetic' at (1)
archs = ["x86_64", "aarch64"]

[tool.cibuildwheel.windows]
archs = ["auto", "ARM64"]

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
